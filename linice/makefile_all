
INC = /usr/include

CC = gcc
AS = nasm
CFLAGS = -gdwarf -Wall -D__KERNEL__ -DMODULE -DLINUX -DDBG -O -I$(INC)


all: linice.o

clean:
	rm -f *.o *~ core

linice.o:   i386.o \
            initial.o \
            display.o \
            command.o \
            history.o \
            debugger.o \
            eval.o \
            dump.o \
            registers.o \
            disassembler.o \
            unassemble.o \
            interrupt.o \
            keyboard.o \
            vga.o \
            convert.o \
            ctype.o \
            malloc.o \
            string.o \
	$(LD) -r $^ -o $@


i386.o:     i386.asm
	$(AS) -f elf i386.asm -o i386.o

initial.o:  initial.c
	$(CC) $(CFLAGS) -c initial.c

display.o:  display.c
	$(CC) $(CFLAGS) -c display.c

debugger.o: debugger.c
	$(CC) $(CFLAGS) -c debugger.c

eval.o:     eval.c
	$(CC) $(CFLAGS) -c eval.c

command.o:  command.c
	$(CC) $(CFLAGS) -c command.c

history.o:  history.c
	$(CC) $(CFLAGS) -c history.c

dump.o:     dump.c
	$(CC) $(CFLAGS) -c dump.c

registers.o: registers.c
	$(CC) $(CFLAGS) -c registers.c

disassembler.o: disassembler.c
	$(CC) $(CFLAGS) -c disassembler.c

unassemble.o: unassemble.c
	$(CC) $(CFLAGS) -c unassemble.c

interrupt.o: interrupt.c
	$(CC) $(CFLAGS) -c interrupt.c

keyboard.o: keyboard.c
	$(CC) $(CFLAGS) -c keyboard.c

vga.o: vga.c
	$(CC) $(CFLAGS) -c vga.c

convert.o: convert.c
	$(CC) $(CFLAGS) -c convert.c

ctype.o: ctype.c
	$(CC) $(CFLAGS) -c ctype.c

malloc.o: malloc.c
	$(CC) $(CFLAGS) -c malloc.c

string.o: string.c
	$(CC) $(CFLAGS) -c string.c
